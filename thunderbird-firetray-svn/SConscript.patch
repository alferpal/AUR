--- components/SConscript	2011-12-23 00:49:44.237838116 +0100
+++ components/SConscript1	2011-12-23 00:50:11.304498924 +0100
@@ -31,6 +31,9 @@
     gecko_bin = os.environ['GECKO_SDK_BIN'];
     if gecko_bin[-1] != os.sep: gecko_bin += os.sep
 
+    gecko_sdk_bin = os.environ['GECKO_SDK_BIN'];
+    if gecko_sdk_bin[-1] != os.sep: gecko_sdk_bin += os.sep
+
     gecko_include = os.environ['GECKO_SDK_INCLUDE'];
     if gecko_include[-1] != os.sep: gecko_include += os.sep
 
@@ -46,6 +49,7 @@
         print "Using GECKO_SDK=" + geckosdk
         if geckosdk[-1] != os.sep: geckosdk += os.sep
         gecko_bin = geckosdk + 'bin'
+        gecko_sdk_bin = geckosdk + 'sdk/bin'
         gecko_include = geckosdk + 'include'
         gecko_idl = geckosdk + 'idl'
         gecko_lib = geckosdk + 'lib'
@@ -73,8 +77,10 @@
             break
 
 # Create two builders to create xpt and header files from idl.
-bxpt = Builder(action = 'xpidl -w -m typelib -Icomponents -I' + gecko_idl + ' -e $TARGET $SOURCE', suffix = '.xpt', src_suffix = '.idl')
-bhdr = Builder(action = 'xpidl -w -m header -Icomponents -I' + gecko_idl + ' -e $TARGET $SOURCE', suffix = '.h', src_suffix = '.idl')
+#bxpt = Builder(action = 'xpidl -w -m typelib -Icomponents -I' + gecko_idl + ' -e $TARGET $SOURCE', suffix = '.xpt', src_suffix = '.idl')
+#bhdr = Builder(action = 'xpidl -w -m header -Icomponents -I' + gecko_idl + ' -e $TARGET $SOURCE', suffix = '.h', src_suffix = '.idl')
+bxpt = Builder(action = 'python2 /usr/lib/xulrunner-devel-9.0/sdk/bin/typelib.py -Icomponents -I' + gecko_idl + ' -o $TARGET $SOURCE', suffix = '.xpt', src_suffix = '.idl')
+bhdr = Builder(action = 'python2 /usr/lib/xulrunner-devel-9.0/sdk/bin/header.py -Icomponents -I' + gecko_idl + ' -o $TARGET $SOURCE', suffix = '.h', src_suffix = '.idl')
 
 # Create environment object for build
 env = Environment(
@@ -83,6 +89,7 @@
     LIBS = xpcom_libs,
     ENV = os.environ)
 env.AppendENVPath('PATH', gecko_bin)
+env.AppendENVPath('PATH', gecko_sdk_bin)
 env.Append(BUILDERS = {'MozXPT' : bxpt, 'MozHeader' : bhdr })
 
 env.ParseConfig('pkg-config ' + linking_options + ' --cflags gtk+-2.0') # libnotify
